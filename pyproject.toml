[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-admiral"
version = "0.1.0"
authors = [
    { name = "iklobato", email = "iklobato1@gmail.com" },
]
description = "A comprehensive testing framework for Django Admin interfaces using Selenium"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "django>=3.2",
    "selenium>=4.0.0",
    "webdriver_manager>=3.8.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0.0",
    "factory-boy>=3.2.0",
]
dev = [
    "black>=23.0.0",
    "isort>=5.10.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
"Homepage" = "https://github.com/yourusername/django-admiral"
"Bug Tracker" = "https://github.com/yourusername/django-admiral/issues"
"Documentation" = "https://django-admiral.readthedocs.io/"
"Source Code" = "https://github.com/yourusername/django-admiral"

[tool.hatch.build.targets.wheel]
packages = ["src/django_admiral"]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["test_*.py", "*_test.py"]
addopts = "-ra -q --cov=django_admiral"
testpaths = ["tests"]

[tool.coverage.run]
source = ["django_admiral"]
omit = ["tests/*", "docs/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
